// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/WorldMessages/common/GridItem.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MetaVirus.Net.Messages.Common {

  /// <summary>Holder for reflection information generated from protos/WorldMessages/common/GridItem.proto</summary>
  public static partial class GridItemReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/WorldMessages/common/GridItem.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GridItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipwcm90b3MvV29ybGRNZXNzYWdlcy9jb21tb24vR3JpZEl0ZW0ucHJvdG8S",
            "HU1ldGFWaXJ1cy5OZXQuTWVzc2FnZXMuQ29tbW9uGilwcm90b3MvV29ybGRN",
            "ZXNzYWdlcy9jb21tb24vdmVjdG9yMy5wcm90byKuAwoKUEJHcmlkSXRlbRIP",
            "CgJpZBgBIAEoBUgAiAEBEhEKBHR5cGUYAiABKAVIAYgBARISCgVtYXBJZBgD",
            "IAEoBUgCiAEBEhIKBXN0YXRlGAQgASgFSAOIAQESEQoEY2FtcBgFIAEoBUgE",
            "iAEBEhEKBG5hbWUYBiABKAlIBYgBARISCgVsZXZlbBgHIAEoBUgGiAEBEhMK",
            "BmdlbmRlchgIIAEoBUgHiAEBEhMKBmF2YXRhchgJIAEoA0gIiAEBEj8KCHBv",
            "c2l0aW9uGAogASgLMiguTWV0YVZpcnVzLk5ldC5NZXNzYWdlcy5Db21tb24u",
            "UEJWZWN0b3IzSAmIAQESPwoIcm90YXRpb24YCyABKAsyKC5NZXRhVmlydXMu",
            "TmV0Lk1lc3NhZ2VzLkNvbW1vbi5QQlZlY3RvcjNICogBAUIFCgNfaWRCBwoF",
            "X3R5cGVCCAoGX21hcElkQggKBl9zdGF0ZUIHCgVfY2FtcEIHCgVfbmFtZUII",
            "CgZfbGV2ZWxCCQoHX2dlbmRlckIJCgdfYXZhdGFyQgsKCV9wb3NpdGlvbkIL",
            "Cglfcm90YXRpb25CNwokY29tLm1ldGF2aXJ1cy5uZXQubWVzc2FnZXMucGIu",
            "Y29tbW9uQg1HcmlkSXRlbVBiT3V0UAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MetaVirus.Net.Messages.Common.Vector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MetaVirus.Net.Messages.Common.PBGridItem), global::MetaVirus.Net.Messages.Common.PBGridItem.Parser, new[]{ "Id", "Type", "MapId", "State", "Camp", "Name", "Level", "Gender", "Avatar", "Position", "Rotation" }, new[]{ "Id", "Type", "MapId", "State", "Camp", "Name", "Level", "Gender", "Avatar", "Position", "Rotation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PBGridItem : pb::IMessage<PBGridItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBGridItem> _parser = new pb::MessageParser<PBGridItem>(() => new PBGridItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBGridItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MetaVirus.Net.Messages.Common.GridItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBGridItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBGridItem(PBGridItem other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      type_ = other.type_;
      mapId_ = other.mapId_;
      state_ = other.state_;
      camp_ = other.camp_;
      name_ = other.name_;
      level_ = other.level_;
      gender_ = other.gender_;
      avatar_ = other.avatar_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBGridItem Clone() {
      return new PBGridItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    /// <summary>
    ///暂时只有 player = 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 3;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MapId {
      get { if ((_hasBits0 & 4) != 0) { return mapId_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mapId_ = value;
      }
    }
    /// <summary>Gets whether the "mapId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMapId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mapId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMapId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int State {
      get { if ((_hasBits0 & 8) != 0) { return state_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        state_ = value;
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "camp" field.</summary>
    public const int CampFieldNumber = 5;
    private int camp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Camp {
      get { if ((_hasBits0 & 16) != 0) { return camp_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        camp_ = value;
      }
    }
    /// <summary>Gets whether the "camp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "camp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 7;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 32) != 0) { return level_; } else { return 0; } }
      set {
        _hasBits0 |= 32;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 8;
    private int gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Gender {
      get { if ((_hasBits0 & 64) != 0) { return gender_; } else { return 0; } }
      set {
        _hasBits0 |= 64;
        gender_ = value;
      }
    }
    /// <summary>Gets whether the "gender" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGender {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "gender" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGender() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 9;
    private long avatar_;
    /// <summary>
    ///形象配置，暂定64位数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Avatar {
      get { if ((_hasBits0 & 128) != 0) { return avatar_; } else { return 0L; } }
      set {
        _hasBits0 |= 128;
        avatar_ = value;
      }
    }
    /// <summary>Gets whether the "avatar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatar {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "avatar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatar() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 10;
    private global::MetaVirus.Net.Messages.Common.PBVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MetaVirus.Net.Messages.Common.PBVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 11;
    private global::MetaVirus.Net.Messages.Common.PBVector3 rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MetaVirus.Net.Messages.Common.PBVector3 Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBGridItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBGridItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      if (MapId != other.MapId) return false;
      if (State != other.State) return false;
      if (Camp != other.Camp) return false;
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      if (Gender != other.Gender) return false;
      if (Avatar != other.Avatar) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasMapId) hash ^= MapId.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasCamp) hash ^= Camp.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (HasGender) hash ^= Gender.GetHashCode();
      if (HasAvatar) hash ^= Avatar.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasState) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (HasCamp) {
        output.WriteRawTag(40);
        output.WriteInt32(Camp);
      }
      if (HasName) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasGender) {
        output.WriteRawTag(64);
        output.WriteInt32(Gender);
      }
      if (HasAvatar) {
        output.WriteRawTag(72);
        output.WriteInt64(Avatar);
      }
      if (position_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (HasMapId) {
        output.WriteRawTag(24);
        output.WriteInt32(MapId);
      }
      if (HasState) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (HasCamp) {
        output.WriteRawTag(40);
        output.WriteInt32(Camp);
      }
      if (HasName) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (HasLevel) {
        output.WriteRawTag(56);
        output.WriteInt32(Level);
      }
      if (HasGender) {
        output.WriteRawTag(64);
        output.WriteInt32(Gender);
      }
      if (HasAvatar) {
        output.WriteRawTag(72);
        output.WriteInt64(Avatar);
      }
      if (position_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Rotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (HasMapId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (HasCamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Camp);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (HasGender) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (HasAvatar) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Avatar);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBGridItem other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasMapId) {
        MapId = other.MapId;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasCamp) {
        Camp = other.Camp;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasGender) {
        Gender = other.Gender;
      }
      if (other.HasAvatar) {
        Avatar = other.Avatar;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::MetaVirus.Net.Messages.Common.PBVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::MetaVirus.Net.Messages.Common.PBVector3();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
          case 40: {
            Camp = input.ReadInt32();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 64: {
            Gender = input.ReadInt32();
            break;
          }
          case 72: {
            Avatar = input.ReadInt64();
            break;
          }
          case 82: {
            if (position_ == null) {
              Position = new global::MetaVirus.Net.Messages.Common.PBVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 90: {
            if (rotation_ == null) {
              Rotation = new global::MetaVirus.Net.Messages.Common.PBVector3();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            MapId = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
          case 40: {
            Camp = input.ReadInt32();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            Level = input.ReadInt32();
            break;
          }
          case 64: {
            Gender = input.ReadInt32();
            break;
          }
          case 72: {
            Avatar = input.ReadInt64();
            break;
          }
          case 82: {
            if (position_ == null) {
              Position = new global::MetaVirus.Net.Messages.Common.PBVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 90: {
            if (rotation_ == null) {
              Rotation = new global::MetaVirus.Net.Messages.Common.PBVector3();
            }
            input.ReadMessage(Rotation);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
