// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BuffAttachData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MetaVirus.Battle.Record {

  /// <summary>Holder for reflection information generated from BuffAttachData.proto</summary>
  public static partial class BuffAttachDataReflection {

    #region Descriptor
    /// <summary>File descriptor for BuffAttachData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuffAttachDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRCdWZmQXR0YWNoRGF0YS5wcm90bxIXTWV0YVZpcnVzLmJhdHRsZS5yZWNv",
            "cmQivgIKEEJ1ZmZBdHRhY2hEYXRhUGISDgoGYnVmZklkGAEgASgFEhIKCmJ1",
            "ZmZEYXRhSWQYAiABKAUSEAoIYnVmZlR5cGUYAyABKAUSEAoIY2FzdGVySWQY",
            "BCABKAUSEAoIdGFyZ2V0SWQYBSABKAUSEQoJYnVmZlN0YXRlGAYgASgFEhIK",
            "CmVmZmVjdFR5cGUYByABKAUSFQoNYnVmZkF0dHJpYnV0ZRgIIAEoBRIXCg9l",
            "ZmZlY3RBdHRyaWJ1dGUYCSABKAUSEwoLZWZmZWN0VmFsdWUYCiABKAUSFQoN",
            "YWJub3JtYWxTdGF0ZRgLIAEoBRITCgtjb3VudE1ldGhvZBgMIAEoBRIRCgly",
            "ZW1haW5pbmcYDSABKAUSEQoJYnVmZkxldmVsGA4gASgFEhIKCnJlc3VsdFR5",
            "cGUYDyABKAVCNAobY29tLm1ldGF2aXJ1cy5iYXR0bGUucmVjb3JkQhNCdWZm",
            "QXR0YWNoRGF0YVBCT3V0UAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MetaVirus.Battle.Record.BuffAttachDataPb), global::MetaVirus.Battle.Record.BuffAttachDataPb.Parser, new[]{ "BuffId", "BuffDataId", "BuffType", "CasterId", "TargetId", "BuffState", "EffectType", "BuffAttribute", "EffectAttribute", "EffectValue", "AbnormalState", "CountMethod", "Remaining", "BuffLevel", "ResultType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BuffAttachDataPb : pb::IMessage<BuffAttachDataPb>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuffAttachDataPb> _parser = new pb::MessageParser<BuffAttachDataPb>(() => new BuffAttachDataPb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BuffAttachDataPb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MetaVirus.Battle.Record.BuffAttachDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuffAttachDataPb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuffAttachDataPb(BuffAttachDataPb other) : this() {
      buffId_ = other.buffId_;
      buffDataId_ = other.buffDataId_;
      buffType_ = other.buffType_;
      casterId_ = other.casterId_;
      targetId_ = other.targetId_;
      buffState_ = other.buffState_;
      effectType_ = other.effectType_;
      buffAttribute_ = other.buffAttribute_;
      effectAttribute_ = other.effectAttribute_;
      effectValue_ = other.effectValue_;
      abnormalState_ = other.abnormalState_;
      countMethod_ = other.countMethod_;
      remaining_ = other.remaining_;
      buffLevel_ = other.buffLevel_;
      resultType_ = other.resultType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BuffAttachDataPb Clone() {
      return new BuffAttachDataPb(this);
    }

    /// <summary>Field number for the "buffId" field.</summary>
    public const int BuffIdFieldNumber = 1;
    private int buffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffId {
      get { return buffId_; }
      set {
        buffId_ = value;
      }
    }

    /// <summary>Field number for the "buffDataId" field.</summary>
    public const int BuffDataIdFieldNumber = 2;
    private int buffDataId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffDataId {
      get { return buffDataId_; }
      set {
        buffDataId_ = value;
      }
    }

    /// <summary>Field number for the "buffType" field.</summary>
    public const int BuffTypeFieldNumber = 3;
    private int buffType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffType {
      get { return buffType_; }
      set {
        buffType_ = value;
      }
    }

    /// <summary>Field number for the "casterId" field.</summary>
    public const int CasterIdFieldNumber = 4;
    private int casterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CasterId {
      get { return casterId_; }
      set {
        casterId_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 5;
    private int targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    /// <summary>Field number for the "buffState" field.</summary>
    public const int BuffStateFieldNumber = 6;
    private int buffState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffState {
      get { return buffState_; }
      set {
        buffState_ = value;
      }
    }

    /// <summary>Field number for the "effectType" field.</summary>
    public const int EffectTypeFieldNumber = 7;
    private int effectType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectType {
      get { return effectType_; }
      set {
        effectType_ = value;
      }
    }

    /// <summary>Field number for the "buffAttribute" field.</summary>
    public const int BuffAttributeFieldNumber = 8;
    private int buffAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffAttribute {
      get { return buffAttribute_; }
      set {
        buffAttribute_ = value;
      }
    }

    /// <summary>Field number for the "effectAttribute" field.</summary>
    public const int EffectAttributeFieldNumber = 9;
    private int effectAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectAttribute {
      get { return effectAttribute_; }
      set {
        effectAttribute_ = value;
      }
    }

    /// <summary>Field number for the "effectValue" field.</summary>
    public const int EffectValueFieldNumber = 10;
    private int effectValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EffectValue {
      get { return effectValue_; }
      set {
        effectValue_ = value;
      }
    }

    /// <summary>Field number for the "abnormalState" field.</summary>
    public const int AbnormalStateFieldNumber = 11;
    private int abnormalState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AbnormalState {
      get { return abnormalState_; }
      set {
        abnormalState_ = value;
      }
    }

    /// <summary>Field number for the "countMethod" field.</summary>
    public const int CountMethodFieldNumber = 12;
    private int countMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CountMethod {
      get { return countMethod_; }
      set {
        countMethod_ = value;
      }
    }

    /// <summary>Field number for the "remaining" field.</summary>
    public const int RemainingFieldNumber = 13;
    private int remaining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Remaining {
      get { return remaining_; }
      set {
        remaining_ = value;
      }
    }

    /// <summary>Field number for the "buffLevel" field.</summary>
    public const int BuffLevelFieldNumber = 14;
    private int buffLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BuffLevel {
      get { return buffLevel_; }
      set {
        buffLevel_ = value;
      }
    }

    /// <summary>Field number for the "resultType" field.</summary>
    public const int ResultTypeFieldNumber = 15;
    private int resultType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResultType {
      get { return resultType_; }
      set {
        resultType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BuffAttachDataPb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BuffAttachDataPb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuffId != other.BuffId) return false;
      if (BuffDataId != other.BuffDataId) return false;
      if (BuffType != other.BuffType) return false;
      if (CasterId != other.CasterId) return false;
      if (TargetId != other.TargetId) return false;
      if (BuffState != other.BuffState) return false;
      if (EffectType != other.EffectType) return false;
      if (BuffAttribute != other.BuffAttribute) return false;
      if (EffectAttribute != other.EffectAttribute) return false;
      if (EffectValue != other.EffectValue) return false;
      if (AbnormalState != other.AbnormalState) return false;
      if (CountMethod != other.CountMethod) return false;
      if (Remaining != other.Remaining) return false;
      if (BuffLevel != other.BuffLevel) return false;
      if (ResultType != other.ResultType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BuffId != 0) hash ^= BuffId.GetHashCode();
      if (BuffDataId != 0) hash ^= BuffDataId.GetHashCode();
      if (BuffType != 0) hash ^= BuffType.GetHashCode();
      if (CasterId != 0) hash ^= CasterId.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (BuffState != 0) hash ^= BuffState.GetHashCode();
      if (EffectType != 0) hash ^= EffectType.GetHashCode();
      if (BuffAttribute != 0) hash ^= BuffAttribute.GetHashCode();
      if (EffectAttribute != 0) hash ^= EffectAttribute.GetHashCode();
      if (EffectValue != 0) hash ^= EffectValue.GetHashCode();
      if (AbnormalState != 0) hash ^= AbnormalState.GetHashCode();
      if (CountMethod != 0) hash ^= CountMethod.GetHashCode();
      if (Remaining != 0) hash ^= Remaining.GetHashCode();
      if (BuffLevel != 0) hash ^= BuffLevel.GetHashCode();
      if (ResultType != 0) hash ^= ResultType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BuffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuffId);
      }
      if (BuffDataId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuffDataId);
      }
      if (BuffType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffType);
      }
      if (CasterId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CasterId);
      }
      if (TargetId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (BuffState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BuffState);
      }
      if (EffectType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EffectType);
      }
      if (BuffAttribute != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BuffAttribute);
      }
      if (EffectAttribute != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectAttribute);
      }
      if (EffectValue != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EffectValue);
      }
      if (AbnormalState != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AbnormalState);
      }
      if (CountMethod != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(CountMethod);
      }
      if (Remaining != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Remaining);
      }
      if (BuffLevel != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BuffLevel);
      }
      if (ResultType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(ResultType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BuffId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuffId);
      }
      if (BuffDataId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuffDataId);
      }
      if (BuffType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuffType);
      }
      if (CasterId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CasterId);
      }
      if (TargetId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TargetId);
      }
      if (BuffState != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BuffState);
      }
      if (EffectType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EffectType);
      }
      if (BuffAttribute != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(BuffAttribute);
      }
      if (EffectAttribute != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EffectAttribute);
      }
      if (EffectValue != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EffectValue);
      }
      if (AbnormalState != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(AbnormalState);
      }
      if (CountMethod != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(CountMethod);
      }
      if (Remaining != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Remaining);
      }
      if (BuffLevel != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BuffLevel);
      }
      if (ResultType != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(ResultType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BuffId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffId);
      }
      if (BuffDataId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffDataId);
      }
      if (BuffType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffType);
      }
      if (CasterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CasterId);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (BuffState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffState);
      }
      if (EffectType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectType);
      }
      if (BuffAttribute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffAttribute);
      }
      if (EffectAttribute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectAttribute);
      }
      if (EffectValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectValue);
      }
      if (AbnormalState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbnormalState);
      }
      if (CountMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CountMethod);
      }
      if (Remaining != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Remaining);
      }
      if (BuffLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuffLevel);
      }
      if (ResultType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BuffAttachDataPb other) {
      if (other == null) {
        return;
      }
      if (other.BuffId != 0) {
        BuffId = other.BuffId;
      }
      if (other.BuffDataId != 0) {
        BuffDataId = other.BuffDataId;
      }
      if (other.BuffType != 0) {
        BuffType = other.BuffType;
      }
      if (other.CasterId != 0) {
        CasterId = other.CasterId;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      if (other.BuffState != 0) {
        BuffState = other.BuffState;
      }
      if (other.EffectType != 0) {
        EffectType = other.EffectType;
      }
      if (other.BuffAttribute != 0) {
        BuffAttribute = other.BuffAttribute;
      }
      if (other.EffectAttribute != 0) {
        EffectAttribute = other.EffectAttribute;
      }
      if (other.EffectValue != 0) {
        EffectValue = other.EffectValue;
      }
      if (other.AbnormalState != 0) {
        AbnormalState = other.AbnormalState;
      }
      if (other.CountMethod != 0) {
        CountMethod = other.CountMethod;
      }
      if (other.Remaining != 0) {
        Remaining = other.Remaining;
      }
      if (other.BuffLevel != 0) {
        BuffLevel = other.BuffLevel;
      }
      if (other.ResultType != 0) {
        ResultType = other.ResultType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuffId = input.ReadInt32();
            break;
          }
          case 16: {
            BuffDataId = input.ReadInt32();
            break;
          }
          case 24: {
            BuffType = input.ReadInt32();
            break;
          }
          case 32: {
            CasterId = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
          case 48: {
            BuffState = input.ReadInt32();
            break;
          }
          case 56: {
            EffectType = input.ReadInt32();
            break;
          }
          case 64: {
            BuffAttribute = input.ReadInt32();
            break;
          }
          case 72: {
            EffectAttribute = input.ReadInt32();
            break;
          }
          case 80: {
            EffectValue = input.ReadInt32();
            break;
          }
          case 88: {
            AbnormalState = input.ReadInt32();
            break;
          }
          case 96: {
            CountMethod = input.ReadInt32();
            break;
          }
          case 104: {
            Remaining = input.ReadInt32();
            break;
          }
          case 112: {
            BuffLevel = input.ReadInt32();
            break;
          }
          case 120: {
            ResultType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BuffId = input.ReadInt32();
            break;
          }
          case 16: {
            BuffDataId = input.ReadInt32();
            break;
          }
          case 24: {
            BuffType = input.ReadInt32();
            break;
          }
          case 32: {
            CasterId = input.ReadInt32();
            break;
          }
          case 40: {
            TargetId = input.ReadInt32();
            break;
          }
          case 48: {
            BuffState = input.ReadInt32();
            break;
          }
          case 56: {
            EffectType = input.ReadInt32();
            break;
          }
          case 64: {
            BuffAttribute = input.ReadInt32();
            break;
          }
          case 72: {
            EffectAttribute = input.ReadInt32();
            break;
          }
          case 80: {
            EffectValue = input.ReadInt32();
            break;
          }
          case 88: {
            AbnormalState = input.ReadInt32();
            break;
          }
          case 96: {
            CountMethod = input.ReadInt32();
            break;
          }
          case 104: {
            Remaining = input.ReadInt32();
            break;
          }
          case 112: {
            BuffLevel = input.ReadInt32();
            break;
          }
          case 120: {
            ResultType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
