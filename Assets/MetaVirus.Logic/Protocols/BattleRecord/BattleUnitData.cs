// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattleUnitData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MetaVirus.Battle.Record {

  /// <summary>Holder for reflection information generated from BattleUnitData.proto</summary>
  public static partial class BattleUnitDataReflection {

    #region Descriptor
    /// <summary>File descriptor for BattleUnitData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattleUnitDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRCYXR0bGVVbml0RGF0YS5wcm90bxIXTWV0YVZpcnVzLmJhdHRsZS5yZWNv",
            "cmQi0gIKEEJhdHRsZVVuaXREYXRhUGISDwoCaWQYASABKAVIAIgBARIVCghz",
            "b3VyY2VJZBgCIAEoBUgBiAEBEhQKB3F1YWxpdHkYAyABKAVIAogBARISCgVs",
            "ZXZlbBgEIAEoBUgDiAEBEhIKCnByb3BlcnRpZXMYBSADKAUSEwoLcmVzaXN0",
            "YW5jZXMYBiADKAUSEwoLYXRrU2tpbGxJZHMYByADKAUSFgoOYXRrU2tpbGxM",
            "ZXZlbHMYCCADKAUSEgoFc2NhbGUYCSABKAJIBIgBARIXCgpzb3VyY2VUeXBl",
            "GAogASgFSAWIAQESFwoKcmVzb3VyY2VJZBgLIAEoBUgGiAEBQgUKA19pZEIL",
            "Cglfc291cmNlSWRCCgoIX3F1YWxpdHlCCAoGX2xldmVsQggKBl9zY2FsZUIN",
            "Cgtfc291cmNlVHlwZUINCgtfcmVzb3VyY2VJZEI0Chtjb20ubWV0YXZpcnVz",
            "LmJhdHRsZS5yZWNvcmRCE0JhdHRsZVVuaXREYXRhUEJPdXRQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MetaVirus.Battle.Record.BattleUnitDataPb), global::MetaVirus.Battle.Record.BattleUnitDataPb.Parser, new[]{ "Id", "SourceId", "Quality", "Level", "Properties", "Resistances", "AtkSkillIds", "AtkSkillLevels", "Scale", "SourceType", "ResourceId" }, new[]{ "Id", "SourceId", "Quality", "Level", "Scale", "SourceType", "ResourceId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BattleUnitDataPb : pb::IMessage<BattleUnitDataPb>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleUnitDataPb> _parser = new pb::MessageParser<BattleUnitDataPb>(() => new BattleUnitDataPb());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattleUnitDataPb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MetaVirus.Battle.Record.BattleUnitDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleUnitDataPb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleUnitDataPb(BattleUnitDataPb other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      sourceId_ = other.sourceId_;
      quality_ = other.quality_;
      level_ = other.level_;
      properties_ = other.properties_.Clone();
      resistances_ = other.resistances_.Clone();
      atkSkillIds_ = other.atkSkillIds_.Clone();
      atkSkillLevels_ = other.atkSkillLevels_.Clone();
      scale_ = other.scale_;
      sourceType_ = other.sourceType_;
      resourceId_ = other.resourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleUnitDataPb Clone() {
      return new BattleUnitDataPb(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private int sourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SourceId {
      get { if ((_hasBits0 & 2) != 0) { return sourceId_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        sourceId_ = value;
      }
    }
    /// <summary>Gets whether the "sourceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sourceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 3;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Quality {
      get { if ((_hasBits0 & 4) != 0) { return quality_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        quality_ = value;
      }
    }
    /// <summary>Gets whether the "quality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuality {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "quality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuality() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 4;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Level {
      get { if ((_hasBits0 & 8) != 0) { return level_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLevel {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLevel() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_properties_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> properties_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "resistances" field.</summary>
    public const int ResistancesFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_resistances_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> resistances_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Resistances {
      get { return resistances_; }
    }

    /// <summary>Field number for the "atkSkillIds" field.</summary>
    public const int AtkSkillIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_atkSkillIds_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> atkSkillIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AtkSkillIds {
      get { return atkSkillIds_; }
    }

    /// <summary>Field number for the "atkSkillLevels" field.</summary>
    public const int AtkSkillLevelsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_atkSkillLevels_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> atkSkillLevels_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AtkSkillLevels {
      get { return atkSkillLevels_; }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 9;
    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Scale {
      get { if ((_hasBits0 & 16) != 0) { return scale_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        scale_ = value;
      }
    }
    /// <summary>Gets whether the "scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScale {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScale() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sourceType" field.</summary>
    public const int SourceTypeFieldNumber = 10;
    private int sourceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SourceType {
      get { if ((_hasBits0 & 32) != 0) { return sourceType_; } else { return 0; } }
      set {
        _hasBits0 |= 32;
        sourceType_ = value;
      }
    }
    /// <summary>Gets whether the "sourceType" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceType {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sourceType" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceType() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "resourceId" field.</summary>
    public const int ResourceIdFieldNumber = 11;
    private int resourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResourceId {
      get { if ((_hasBits0 & 64) != 0) { return resourceId_; } else { return 0; } }
      set {
        _hasBits0 |= 64;
        resourceId_ = value;
      }
    }
    /// <summary>Gets whether the "resourceId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResourceId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "resourceId" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResourceId() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattleUnitDataPb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattleUnitDataPb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SourceId != other.SourceId) return false;
      if (Quality != other.Quality) return false;
      if (Level != other.Level) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if(!resistances_.Equals(other.resistances_)) return false;
      if(!atkSkillIds_.Equals(other.atkSkillIds_)) return false;
      if(!atkSkillLevels_.Equals(other.atkSkillLevels_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      if (SourceType != other.SourceType) return false;
      if (ResourceId != other.ResourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasSourceId) hash ^= SourceId.GetHashCode();
      if (HasQuality) hash ^= Quality.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      hash ^= properties_.GetHashCode();
      hash ^= resistances_.GetHashCode();
      hash ^= atkSkillIds_.GetHashCode();
      hash ^= atkSkillLevels_.GetHashCode();
      if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (HasSourceType) hash ^= SourceType.GetHashCode();
      if (HasResourceId) hash ^= ResourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasSourceId) {
        output.WriteRawTag(16);
        output.WriteInt32(SourceId);
      }
      if (HasQuality) {
        output.WriteRawTag(24);
        output.WriteInt32(Quality);
      }
      if (HasLevel) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      resistances_.WriteTo(output, _repeated_resistances_codec);
      atkSkillIds_.WriteTo(output, _repeated_atkSkillIds_codec);
      atkSkillLevels_.WriteTo(output, _repeated_atkSkillLevels_codec);
      if (HasScale) {
        output.WriteRawTag(77);
        output.WriteFloat(Scale);
      }
      if (HasSourceType) {
        output.WriteRawTag(80);
        output.WriteInt32(SourceType);
      }
      if (HasResourceId) {
        output.WriteRawTag(88);
        output.WriteInt32(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (HasSourceId) {
        output.WriteRawTag(16);
        output.WriteInt32(SourceId);
      }
      if (HasQuality) {
        output.WriteRawTag(24);
        output.WriteInt32(Quality);
      }
      if (HasLevel) {
        output.WriteRawTag(32);
        output.WriteInt32(Level);
      }
      properties_.WriteTo(ref output, _repeated_properties_codec);
      resistances_.WriteTo(ref output, _repeated_resistances_codec);
      atkSkillIds_.WriteTo(ref output, _repeated_atkSkillIds_codec);
      atkSkillLevels_.WriteTo(ref output, _repeated_atkSkillLevels_codec);
      if (HasScale) {
        output.WriteRawTag(77);
        output.WriteFloat(Scale);
      }
      if (HasSourceType) {
        output.WriteRawTag(80);
        output.WriteInt32(SourceType);
      }
      if (HasResourceId) {
        output.WriteRawTag(88);
        output.WriteInt32(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasSourceId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceId);
      }
      if (HasQuality) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      size += resistances_.CalculateSize(_repeated_resistances_codec);
      size += atkSkillIds_.CalculateSize(_repeated_atkSkillIds_codec);
      size += atkSkillLevels_.CalculateSize(_repeated_atkSkillLevels_codec);
      if (HasScale) {
        size += 1 + 4;
      }
      if (HasSourceType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceType);
      }
      if (HasResourceId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattleUnitDataPb other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSourceId) {
        SourceId = other.SourceId;
      }
      if (other.HasQuality) {
        Quality = other.Quality;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      properties_.Add(other.properties_);
      resistances_.Add(other.resistances_);
      atkSkillIds_.Add(other.atkSkillIds_);
      atkSkillLevels_.Add(other.atkSkillLevels_);
      if (other.HasScale) {
        Scale = other.Scale;
      }
      if (other.HasSourceType) {
        SourceType = other.SourceType;
      }
      if (other.HasResourceId) {
        ResourceId = other.ResourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SourceId = input.ReadInt32();
            break;
          }
          case 24: {
            Quality = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 50:
          case 48: {
            resistances_.AddEntriesFrom(input, _repeated_resistances_codec);
            break;
          }
          case 58:
          case 56: {
            atkSkillIds_.AddEntriesFrom(input, _repeated_atkSkillIds_codec);
            break;
          }
          case 66:
          case 64: {
            atkSkillLevels_.AddEntriesFrom(input, _repeated_atkSkillLevels_codec);
            break;
          }
          case 77: {
            Scale = input.ReadFloat();
            break;
          }
          case 80: {
            SourceType = input.ReadInt32();
            break;
          }
          case 88: {
            ResourceId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SourceId = input.ReadInt32();
            break;
          }
          case 24: {
            Quality = input.ReadInt32();
            break;
          }
          case 32: {
            Level = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            properties_.AddEntriesFrom(ref input, _repeated_properties_codec);
            break;
          }
          case 50:
          case 48: {
            resistances_.AddEntriesFrom(ref input, _repeated_resistances_codec);
            break;
          }
          case 58:
          case 56: {
            atkSkillIds_.AddEntriesFrom(ref input, _repeated_atkSkillIds_codec);
            break;
          }
          case 66:
          case 64: {
            atkSkillLevels_.AddEntriesFrom(ref input, _repeated_atkSkillLevels_codec);
            break;
          }
          case 77: {
            Scale = input.ReadFloat();
            break;
          }
          case 80: {
            SourceType = input.ReadInt32();
            break;
          }
          case 88: {
            ResourceId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
