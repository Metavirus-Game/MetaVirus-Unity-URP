//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.skill
{

/// <summary>
/// 技能等级信息
/// </summary>
public sealed partial class SkillLevelInfo :  Bright.Config.BeanBase 
{
    public SkillLevelInfo(ByteBuf _buf) 
    {
        Level = _buf.ReadInt();
        MpUsage = _buf.ReadInt();
        AtkValue = skill.AtkValue.DeserializeAtkValue(_buf);
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);AttachBuffs = new System.Collections.Generic.List<skill.BuffAttach>(n);for(var i = 0 ; i < n ; i++) { skill.BuffAttach _e;  _e = skill.BuffAttach.DeserializeBuffAttach(_buf); AttachBuffs.Add(_e);}}
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);DispelBuffs = new System.Collections.Generic.List<skill.BuffDispel>(n);for(var i = 0 ; i < n ; i++) { skill.BuffDispel _e;  _e = skill.BuffDispel.DeserializeBuffDispel(_buf); DispelBuffs.Add(_e);}}
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);AttachEffects = new System.Collections.Generic.List<skill.AttachEffect>(n);for(var i = 0 ; i < n ; i++) { skill.AttachEffect _e;  _e = skill.AttachEffect.DeserializeAttachEffect(_buf); AttachEffects.Add(_e);}}
        PostInit();
    }

    public static SkillLevelInfo DeserializeSkillLevelInfo(ByteBuf _buf)
    {
        return new skill.SkillLevelInfo(_buf);
    }

    /// <summary>
    /// 技能等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 技能耗蓝
    /// </summary>
    public int MpUsage { get; private set; }
    /// <summary>
    /// 技能伤害计算方式
    /// </summary>
    public skill.AtkValue AtkValue { get; private set; }
    /// <summary>
    /// 技能附加buff &amp; debuff
    /// </summary>
    public System.Collections.Generic.List<skill.BuffAttach> AttachBuffs { get; private set; }
    /// <summary>
    /// 驱散buff &amp; debuff
    /// </summary>
    public System.Collections.Generic.List<skill.BuffDispel> DispelBuffs { get; private set; }
    /// <summary>
    /// 技能附加效果
    /// </summary>
    public System.Collections.Generic.List<skill.AttachEffect> AttachEffects { get; private set; }

    public const int __ID__ = 34963550;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        AtkValue?.Resolve(_tables);
        foreach(var _e in AttachBuffs) { _e?.Resolve(_tables); }
        foreach(var _e in DispelBuffs) { _e?.Resolve(_tables); }
        foreach(var _e in AttachEffects) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        AtkValue?.TranslateText(translator);
        foreach(var _e in AttachBuffs) { _e?.TranslateText(translator); }
        foreach(var _e in DispelBuffs) { _e?.TranslateText(translator); }
        foreach(var _e in AttachEffects) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Level:" + Level + ","
        + "MpUsage:" + MpUsage + ","
        + "AtkValue:" + AtkValue + ","
        + "AttachBuffs:" + Bright.Common.StringUtil.CollectionToString(AttachBuffs) + ","
        + "DispelBuffs:" + Bright.Common.StringUtil.CollectionToString(DispelBuffs) + ","
        + "AttachEffects:" + Bright.Common.StringUtil.CollectionToString(AttachEffects) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
