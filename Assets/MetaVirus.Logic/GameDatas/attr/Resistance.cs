//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.attr
{

/// <summary>
/// 怪物抗性
/// </summary>
public sealed partial class Resistance :  Bright.Config.BeanBase 
{
    public Resistance(ByteBuf _buf) 
    {
        ResiFire = _buf.ReadFloat();
        ResiIce = _buf.ReadFloat();
        ResiElec = _buf.ReadFloat();
        ResiLight = _buf.ReadFloat();
        ResiDark = _buf.ReadFloat();
        ResiPoi = _buf.ReadFloat();
        ResiStun = _buf.ReadFloat();
        ResiChaos = _buf.ReadFloat();
        ResiSleep = _buf.ReadFloat();
        ResiFrozen = _buf.ReadFloat();
        PostInit();
    }

    public static Resistance DeserializeResistance(ByteBuf _buf)
    {
        return new attr.Resistance(_buf);
    }

    /// <summary>
    /// 火抗性
    /// </summary>
    public float ResiFire { get; private set; }
    /// <summary>
    /// 冰抗性
    /// </summary>
    public float ResiIce { get; private set; }
    /// <summary>
    /// 电抗性
    /// </summary>
    public float ResiElec { get; private set; }
    /// <summary>
    /// 光抗性
    /// </summary>
    public float ResiLight { get; private set; }
    /// <summary>
    /// 暗抗性
    /// </summary>
    public float ResiDark { get; private set; }
    /// <summary>
    /// 毒抗性
    /// </summary>
    public float ResiPoi { get; private set; }
    /// <summary>
    /// 麻痹抗性
    /// </summary>
    public float ResiStun { get; private set; }
    /// <summary>
    /// 混乱抗性
    /// </summary>
    public float ResiChaos { get; private set; }
    /// <summary>
    /// 昏睡抗性
    /// </summary>
    public float ResiSleep { get; private set; }
    /// <summary>
    /// 静止抗性
    /// </summary>
    public float ResiFrozen { get; private set; }

    public const int __ID__ = -1944156042;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ResiFire:" + ResiFire + ","
        + "ResiIce:" + ResiIce + ","
        + "ResiElec:" + ResiElec + ","
        + "ResiLight:" + ResiLight + ","
        + "ResiDark:" + ResiDark + ","
        + "ResiPoi:" + ResiPoi + ","
        + "ResiStun:" + ResiStun + ","
        + "ResiChaos:" + ResiChaos + ","
        + "ResiSleep:" + ResiSleep + ","
        + "ResiFrozen:" + ResiFrozen + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
