//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.attr
{

/// <summary>
/// 抗性数组
/// </summary>
public sealed partial class ResistanceArr :  Bright.Config.BeanBase 
{
    public ResistanceArr(ByteBuf _buf) 
    {
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);Resis = new float[n];for(var i = 0 ; i < n ; i++) { float _e;_e = _buf.ReadFloat(); Resis[i] = _e;}}
        PostInit();
    }

    public static ResistanceArr DeserializeResistanceArr(ByteBuf _buf)
    {
        return new attr.ResistanceArr(_buf);
    }

    /// <summary>
    /// 抗性数组
    /// </summary>
    public float[] Resis { get; private set; }

    public const int __ID__ = -718594549;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Resis:" + Bright.Common.StringUtil.CollectionToString(Resis) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
