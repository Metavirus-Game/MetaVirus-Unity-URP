//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.battle
{

public sealed partial class VFXData :  Bright.Config.BeanBase 
{
    public VFXData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Sequence = _buf.ReadInt();
        Type = (common.VfxType)_buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        BindPos = (common.VfxBindPos)_buf.ReadInt();
        AssetName = _buf.ReadString();
        CriAssetName = _buf.ReadString();
        PostInit();
    }

    public static VFXData DeserializeVFXData(ByteBuf _buf)
    {
        return new battle.VFXData(_buf);
    }

    /// <summary>
    /// 特效Id(自动计算)
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 特效序号
    /// </summary>
    public int Sequence { get; private set; }
    /// <summary>
    /// 特效类型
    /// </summary>
    public common.VfxType Type { get; private set; }
    /// <summary>
    /// 特效名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 特效说明
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 绑定位置，默认是HitPos
    /// </summary>
    public common.VfxBindPos BindPos { get; private set; }
    /// <summary>
    /// 特效资源名称
    /// </summary>
    public string AssetName { get; private set; }
    /// <summary>
    /// 暴击资源名称 只有命中特效含有暴击资源
    /// </summary>
    public string CriAssetName { get; private set; }

    public const int __ID__ = 1155646524;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Sequence:" + Sequence + ","
        + "Type:" + Type + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "BindPos:" + BindPos + ","
        + "AssetName:" + AssetName + ","
        + "CriAssetName:" + CriAssetName + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
