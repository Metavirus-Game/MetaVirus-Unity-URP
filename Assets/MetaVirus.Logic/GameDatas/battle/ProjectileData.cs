//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.battle
{

public sealed partial class ProjectileData :  Bright.Config.BeanBase 
{
    public ProjectileData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        MuzzleVfx = _buf.ReadInt();
        ProjectileVfx = _buf.ReadInt();
        HitVfx = _buf.ReadInt();
        Type = (skill.ProjectileType)_buf.ReadInt();
        Speed = _buf.ReadFloat();
        PostInit();
    }

    public static ProjectileData DeserializeProjectileData(ByteBuf _buf)
    {
        return new battle.ProjectileData(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 投射物特效名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 投射物发射特效
    /// </summary>
    public int MuzzleVfx { get; private set; }
    public battle.VFXData MuzzleVfx_Ref { get; private set; }
    /// <summary>
    /// 投射物特效
    /// </summary>
    public int ProjectileVfx { get; private set; }
    public battle.VFXData ProjectileVfx_Ref { get; private set; }
    /// <summary>
    /// 命中特效
    /// </summary>
    public int HitVfx { get; private set; }
    public battle.VFXData HitVfx_Ref { get; private set; }
    /// <summary>
    /// Single_Bullet:          单体子弹，直线，多目标多个特效<br/>Single_Target:         单体目标，目标位置直接播放特效<br/>Single_Summon:     单体召唤，施法者头顶发出特效，多目标多个特效依次发出<br/>Single_Bomb:          单体炸弹，同单体子弹，路径为抛物线<br/>Multi_Target:           群体目标，目标阵型中心位置播放特效，类似 暴风雪<br/>Multi_Summon:       群体召唤，施法者头顶发出特效，一个特效，群体伤害<br/>Multi_Bomb:            群体炸弹，施法者位置发出，抛物线，一个特效，群体伤害<br/>Shockwave:              震荡波，   施法者脚下位置发出，一个特效，群体伤害<br/>Across:                     击穿， 施法者位置发出，一个特效，经过目标时造成伤害，飞出屏幕结束<br/><br/>投射物类型
    /// </summary>
    public skill.ProjectileType Type { get; private set; }
    /// <summary>
    /// 默认为1倍<br/>飞行速度值在GameConfig表中设定<br/><br/>飞行速度倍率
    /// </summary>
    public float Speed { get; private set; }

    public const int __ID__ = 135601481;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.MuzzleVfx_Ref = (_tables["battle.VFXDatas"] as battle.VFXDatas).GetOrDefault(MuzzleVfx);
        this.ProjectileVfx_Ref = (_tables["battle.VFXDatas"] as battle.VFXDatas).GetOrDefault(ProjectileVfx);
        this.HitVfx_Ref = (_tables["battle.VFXDatas"] as battle.VFXDatas).GetOrDefault(HitVfx);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "MuzzleVfx:" + MuzzleVfx + ","
        + "ProjectileVfx:" + ProjectileVfx + ","
        + "HitVfx:" + HitVfx + ","
        + "Type:" + Type + ","
        + "Speed:" + Speed + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
