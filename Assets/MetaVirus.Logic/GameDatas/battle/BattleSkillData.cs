//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.battle
{

public sealed partial class BattleSkillData :  Bright.Config.BeanBase 
{
    public BattleSkillData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        Type = (skill.SkillType)_buf.ReadInt();
        AtkTarget = (skill.AtkTarget)_buf.ReadInt();
        AtkScope = (skill.SkillScope)_buf.ReadInt();
        AtkTargetSelect = (skill.TargetSelectMethod)_buf.ReadInt();
        CameraMode = (skill.CameraMode)_buf.ReadInt();
        CameraShakeMode = (skill.CameraShakeMode)_buf.ReadInt();
        Hit = _buf.ReadFloat();
        AtkAttribute = (skill.AtkAttribute)_buf.ReadInt();
        StartAction = skill.StartAction.DeserializeStartAction(_buf);
        MoveAction = skill.MoveAction.DeserializeMoveAction(_buf);
        CastAction = skill.CastAction.DeserializeCastAction(_buf);
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);LevelInfo = new System.Collections.Generic.List<skill.SkillLevelInfo>(n);for(var i = 0 ; i < n ; i++) { skill.SkillLevelInfo _e;  _e = skill.SkillLevelInfo.DeserializeSkillLevelInfo(_buf); LevelInfo.Add(_e);}}
        PostInit();
    }

    public static BattleSkillData DeserializeBattleSkillData(ByteBuf _buf)
    {
        return new battle.BattleSkillData(_buf);
    }

    /// <summary>
    /// 技能Id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 技能名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 技能说明
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 技能类型
    /// </summary>
    public skill.SkillType Type { get; private set; }
    /// <summary>
    /// 技能目标
    /// </summary>
    public skill.AtkTarget AtkTarget { get; private set; }
    /// <summary>
    /// 技能范围
    /// </summary>
    public skill.SkillScope AtkScope { get; private set; }
    /// <summary>
    /// 目标选取方式
    /// </summary>
    public skill.TargetSelectMethod AtkTargetSelect { get; private set; }
    /// <summary>
    /// 摄像机运行方式
    /// </summary>
    public skill.CameraMode CameraMode { get; private set; }
    /// <summary>
    /// 摄像机震动方式
    /// </summary>
    public skill.CameraShakeMode CameraShakeMode { get; private set; }
    /// <summary>
    /// <br/>技能命中计算方式
    /// </summary>
    public float Hit { get; private set; }
    /// <summary>
    /// <br/><br/><br/>技能属性
    /// </summary>
    public skill.AtkAttribute AtkAttribute { get; private set; }
    /// <summary>
    /// 技能起始动作配置
    /// </summary>
    public skill.StartAction StartAction { get; private set; }
    /// <summary>
    /// 技能移动动作配置
    /// </summary>
    public skill.MoveAction MoveAction { get; private set; }
    /// <summary>
    /// 技能施放动作配置
    /// </summary>
    public skill.CastAction CastAction { get; private set; }
    /// <summary>
    /// 技能等级信息
    /// </summary>
    public System.Collections.Generic.List<skill.SkillLevelInfo> LevelInfo { get; private set; }

    public const int __ID__ = 595407469;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        StartAction?.Resolve(_tables);
        MoveAction?.Resolve(_tables);
        CastAction?.Resolve(_tables);
        foreach(var _e in LevelInfo) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        StartAction?.TranslateText(translator);
        MoveAction?.TranslateText(translator);
        CastAction?.TranslateText(translator);
        foreach(var _e in LevelInfo) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Type:" + Type + ","
        + "AtkTarget:" + AtkTarget + ","
        + "AtkScope:" + AtkScope + ","
        + "AtkTargetSelect:" + AtkTargetSelect + ","
        + "CameraMode:" + CameraMode + ","
        + "CameraShakeMode:" + CameraShakeMode + ","
        + "Hit:" + Hit + ","
        + "AtkAttribute:" + AtkAttribute + ","
        + "StartAction:" + StartAction + ","
        + "MoveAction:" + MoveAction + ","
        + "CastAction:" + CastAction + ","
        + "LevelInfo:" + Bright.Common.StringUtil.CollectionToString(LevelInfo) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
