//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.common
{

public sealed partial class NpcTemplateData :  Bright.Config.BeanBase 
{
    public NpcTemplateData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        Interactive = _buf.ReadBool();
        Greeting = _buf.ReadString();
        Quality = (common.Quality)_buf.ReadInt();
        ResDataId = _buf.ReadInt();
        Level = _buf.ReadInt();
        Speed = _buf.ReadFloat();
        Realm = (common.Camp)_buf.ReadInt();
        Scale = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);NpcFunctions = new int[n];for(var i = 0 ; i < n ; i++) { int _e;_e = _buf.ReadInt(); NpcFunctions[i] = _e;}}
        BattleMonsterGroup = _buf.ReadInt();
        PostInit();
    }

    public static NpcTemplateData DeserializeNpcTemplateData(ByteBuf _buf)
    {
        return new common.NpcTemplateData(_buf);
    }

    /// <summary>
    /// MapNpcId<br/>Npc数据Id从1开始，此表格只填写Npc
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 显示在地图上的Npc名称，不填则使NpcResourceData的名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// Npc说明信息
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// npc是否可交互，默认true
    /// </summary>
    public bool Interactive { get; private set; }
    /// <summary>
    /// 问候语，玩家与npc交互时显示在UI上的文字
    /// </summary>
    public string Greeting { get; private set; }
    /// <summary>
    /// Npc品质
    /// </summary>
    public common.Quality Quality { get; private set; }
    /// <summary>
    /// 资源Id，npc_resource_data表
    /// </summary>
    public int ResDataId { get; private set; }
    public common.NpcResourceData ResDataId_Ref { get; private set; }
    /// <summary>
    /// Npc等级
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 移动速度
    /// </summary>
    public float Speed { get; private set; }
    /// <summary>
    /// Npc阵营
    /// </summary>
    public common.Camp Realm { get; private set; }
    /// <summary>
    /// 模型缩放比例
    /// </summary>
    public float Scale { get; private set; }
    /// <summary>
    /// Npc功能列表<br/>数据来自NpcFunctionDatas<br/>多个功能用 | 分割 
    /// </summary>
    public int[] NpcFunctions { get; private set; }
    public common.NpcFunction[] NpcFunctions_Ref { get; private set; }
    /// <summary>
    /// 触发战斗时的怪物组Id
    /// </summary>
    public int BattleMonsterGroup { get; private set; }
    public battle.MonsterGroupData BattleMonsterGroup_Ref { get; private set; }

    public const int __ID__ = 1477943970;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.ResDataId_Ref = (_tables["common.NpcResourceDatas"] as common.NpcResourceDatas).GetOrDefault(ResDataId);
        { int __n = NpcFunctions.Length; common.NpcFunctionDatas __table = (common.NpcFunctionDatas)_tables["common.NpcFunctionDatas"]; this.NpcFunctions_Ref = new common.NpcFunction[__n]; for(int i = 0 ; i < __n ; i++) { this.NpcFunctions_Ref[i] =  __table.GetOrDefault(NpcFunctions[i]); } }
        this.BattleMonsterGroup_Ref = (_tables["battle.MonsterGroupDatas"] as battle.MonsterGroupDatas).GetOrDefault(BattleMonsterGroup);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Interactive:" + Interactive + ","
        + "Greeting:" + Greeting + ","
        + "Quality:" + Quality + ","
        + "ResDataId:" + ResDataId + ","
        + "Level:" + Level + ","
        + "Speed:" + Speed + ","
        + "Realm:" + Realm + ","
        + "Scale:" + Scale + ","
        + "NpcFunctions:" + Bright.Common.StringUtil.CollectionToString(NpcFunctions) + ","
        + "BattleMonsterGroup:" + BattleMonsterGroup + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
