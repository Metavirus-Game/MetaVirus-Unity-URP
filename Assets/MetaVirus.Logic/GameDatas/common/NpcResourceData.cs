//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.common
{

public sealed partial class NpcResourceData :  Bright.Config.BeanBase 
{
    public NpcResourceData(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Projectile = _buf.ReadString();
        ProjectilePath = (common.ProjectilePath)_buf.ReadInt();
        ProjectileSpeed = _buf.ReadFloat();
        PostInit();
    }

    public static NpcResourceData DeserializeNpcResourceData(ByteBuf _buf)
    {
        return new common.NpcResourceData(_buf);
    }

    /// <summary>
    /// NPC
    /// </summary>
    public int Id { get; private set; }
    public string Name { get; private set; }
    /// <summary>
    /// 投射攻击时的投射物资源地址，如果不填则释放一个空物体，投射物体的光效在技能中配置
    /// </summary>
    public string Projectile { get; private set; }
    /// <summary>
    /// 直线或者抛物线，默认为直线
    /// </summary>
    public common.ProjectilePath ProjectilePath { get; private set; }
    /// <summary>
    /// 默认为 1，正常速度
    /// </summary>
    public float ProjectileSpeed { get; private set; }

    public const int __ID__ = 2069540918;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Projectile:" + Projectile + ","
        + "ProjectilePath:" + ProjectilePath + ","
        + "ProjectileSpeed:" + ProjectileSpeed + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
