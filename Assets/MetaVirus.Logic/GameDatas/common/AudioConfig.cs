//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.common
{

public sealed partial class AudioConfig :  Bright.Config.BeanBase 
{
    public AudioConfig(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Index = _buf.ReadInt();
        Catalog = _buf.ReadInt();
        Name = _buf.ReadString();
        AssetAddress = _buf.ReadString();
        Volume = _buf.ReadFloat();
        Loop = _buf.ReadBool();
        AutoLoad = _buf.ReadBool();
        PostInit();
    }

    public static AudioConfig DeserializeAudioConfig(ByteBuf _buf)
    {
        return new common.AudioConfig(_buf);
    }

    /// <summary>
    /// 资源Id<br/>(autogeneration)
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 资源序号
    /// </summary>
    public int Index { get; private set; }
    /// <summary>
    /// 音频资源分类
    /// </summary>
    public int Catalog { get; private set; }
    public common.AudioCatalog Catalog_Ref { get; private set; }
    /// <summary>
    /// 音频名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 音频资源地址
    /// </summary>
    public string AssetAddress { get; private set; }
    /// <summary>
    /// 音频音量(0-1)
    /// </summary>
    public float Volume { get; private set; }
    /// <summary>
    /// 是否循环播放
    /// </summary>
    public bool Loop { get; private set; }
    /// <summary>
    /// 是否在游戏初始化时加载<br/>一般通用音效，例如UI音效等，需要初始化时加载
    /// </summary>
    public bool AutoLoad { get; private set; }

    public const int __ID__ = 2066567957;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.Catalog_Ref = (_tables["common.AudioCatalogs"] as common.AudioCatalogs).GetOrDefault(Catalog);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Index:" + Index + ","
        + "Catalog:" + Catalog + ","
        + "Name:" + Name + ","
        + "AssetAddress:" + AssetAddress + ","
        + "Volume:" + Volume + ","
        + "Loop:" + Loop + ","
        + "AutoLoad:" + AutoLoad + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
