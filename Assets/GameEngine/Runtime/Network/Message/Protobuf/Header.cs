// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/netcore/header.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameEngine.Network.Message.Protobuf {

  /// <summary>Holder for reflection information generated from protos/netcore/header.proto</summary>
  public static partial class HeaderReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/netcore/header.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtwcm90b3MvbmV0Y29yZS9oZWFkZXIucHJvdG8SHGNvbS5qb3lnYW1lLmJ1",
            "cy5jb3JlLm1lc3NhZ2UiqAEKBkhlYWRlchINCgVzcmNJZBgBIAEoBRINCgVk",
            "c3RJZBgCIAEoBRIOCgZzZXJpYWwYAyABKAUSEAoIZXJyb3JNc2cYBCABKAgS",
            "EAoIdHlwZUZsYWcYBSABKAUSEQoJam95Z2FtZUlkGAYgASgDEhEKCXNlc3Np",
            "b25JZBgHIAEoBRIQCghjbGllbnRJcBgIIAEoBRIUCgxjdXN0b21IZWFkZXIY",
            "CSABKAxCZgoyY29tLmpveWdhbWUuYnVzLmNvcmUubmV0LnByb3RvY29sLm1l",
            "c3NhZ2UucHJvdG9idWZCCEhlYWRlclBCUAGqAiNHYW1lRW5naW5lLk5ldHdv",
            "cmsuTWVzc2FnZS5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameEngine.Network.Message.Protobuf.Header), global::GameEngine.Network.Message.Protobuf.Header.Parser, new[]{ "SrcId", "DstId", "Serial", "ErrorMsg", "TypeFlag", "JoygameId", "SessionId", "ClientIp", "CustomHeader" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Header : pb::IMessage<Header>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameEngine.Network.Message.Protobuf.HeaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header(Header other) : this() {
      srcId_ = other.srcId_;
      dstId_ = other.dstId_;
      serial_ = other.serial_;
      errorMsg_ = other.errorMsg_;
      typeFlag_ = other.typeFlag_;
      joygameId_ = other.joygameId_;
      sessionId_ = other.sessionId_;
      clientIp_ = other.clientIp_;
      customHeader_ = other.customHeader_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "srcId" field.</summary>
    public const int SrcIdFieldNumber = 1;
    private int srcId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SrcId {
      get { return srcId_; }
      set {
        srcId_ = value;
      }
    }

    /// <summary>Field number for the "dstId" field.</summary>
    public const int DstIdFieldNumber = 2;
    private int dstId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DstId {
      get { return dstId_; }
      set {
        dstId_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 3;
    private int serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "errorMsg" field.</summary>
    public const int ErrorMsgFieldNumber = 4;
    private bool errorMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ErrorMsg {
      get { return errorMsg_; }
      set {
        errorMsg_ = value;
      }
    }

    /// <summary>Field number for the "typeFlag" field.</summary>
    public const int TypeFlagFieldNumber = 5;
    private int typeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TypeFlag {
      get { return typeFlag_; }
      set {
        typeFlag_ = value;
      }
    }

    /// <summary>Field number for the "joygameId" field.</summary>
    public const int JoygameIdFieldNumber = 6;
    private long joygameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JoygameId {
      get { return joygameId_; }
      set {
        joygameId_ = value;
      }
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 7;
    private int sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = value;
      }
    }

    /// <summary>Field number for the "clientIp" field.</summary>
    public const int ClientIpFieldNumber = 8;
    private int clientIp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientIp {
      get { return clientIp_; }
      set {
        clientIp_ = value;
      }
    }

    /// <summary>Field number for the "customHeader" field.</summary>
    public const int CustomHeaderFieldNumber = 9;
    private pb::ByteString customHeader_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CustomHeader {
      get { return customHeader_; }
      set {
        customHeader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SrcId != other.SrcId) return false;
      if (DstId != other.DstId) return false;
      if (Serial != other.Serial) return false;
      if (ErrorMsg != other.ErrorMsg) return false;
      if (TypeFlag != other.TypeFlag) return false;
      if (JoygameId != other.JoygameId) return false;
      if (SessionId != other.SessionId) return false;
      if (ClientIp != other.ClientIp) return false;
      if (CustomHeader != other.CustomHeader) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SrcId != 0) hash ^= SrcId.GetHashCode();
      if (DstId != 0) hash ^= DstId.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (ErrorMsg != false) hash ^= ErrorMsg.GetHashCode();
      if (TypeFlag != 0) hash ^= TypeFlag.GetHashCode();
      if (JoygameId != 0L) hash ^= JoygameId.GetHashCode();
      if (SessionId != 0) hash ^= SessionId.GetHashCode();
      if (ClientIp != 0) hash ^= ClientIp.GetHashCode();
      if (CustomHeader.Length != 0) hash ^= CustomHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SrcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SrcId);
      }
      if (DstId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DstId);
      }
      if (Serial != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Serial);
      }
      if (ErrorMsg != false) {
        output.WriteRawTag(32);
        output.WriteBool(ErrorMsg);
      }
      if (TypeFlag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TypeFlag);
      }
      if (JoygameId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(JoygameId);
      }
      if (SessionId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SessionId);
      }
      if (ClientIp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ClientIp);
      }
      if (CustomHeader.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(CustomHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SrcId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SrcId);
      }
      if (DstId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DstId);
      }
      if (Serial != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Serial);
      }
      if (ErrorMsg != false) {
        output.WriteRawTag(32);
        output.WriteBool(ErrorMsg);
      }
      if (TypeFlag != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TypeFlag);
      }
      if (JoygameId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(JoygameId);
      }
      if (SessionId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SessionId);
      }
      if (ClientIp != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ClientIp);
      }
      if (CustomHeader.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(CustomHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SrcId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SrcId);
      }
      if (DstId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DstId);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Serial);
      }
      if (ErrorMsg != false) {
        size += 1 + 1;
      }
      if (TypeFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TypeFlag);
      }
      if (JoygameId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoygameId);
      }
      if (SessionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionId);
      }
      if (ClientIp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientIp);
      }
      if (CustomHeader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CustomHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.SrcId != 0) {
        SrcId = other.SrcId;
      }
      if (other.DstId != 0) {
        DstId = other.DstId;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.ErrorMsg != false) {
        ErrorMsg = other.ErrorMsg;
      }
      if (other.TypeFlag != 0) {
        TypeFlag = other.TypeFlag;
      }
      if (other.JoygameId != 0L) {
        JoygameId = other.JoygameId;
      }
      if (other.SessionId != 0) {
        SessionId = other.SessionId;
      }
      if (other.ClientIp != 0) {
        ClientIp = other.ClientIp;
      }
      if (other.CustomHeader.Length != 0) {
        CustomHeader = other.CustomHeader;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SrcId = input.ReadInt32();
            break;
          }
          case 16: {
            DstId = input.ReadInt32();
            break;
          }
          case 24: {
            Serial = input.ReadInt32();
            break;
          }
          case 32: {
            ErrorMsg = input.ReadBool();
            break;
          }
          case 40: {
            TypeFlag = input.ReadInt32();
            break;
          }
          case 48: {
            JoygameId = input.ReadInt64();
            break;
          }
          case 56: {
            SessionId = input.ReadInt32();
            break;
          }
          case 64: {
            ClientIp = input.ReadInt32();
            break;
          }
          case 74: {
            CustomHeader = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SrcId = input.ReadInt32();
            break;
          }
          case 16: {
            DstId = input.ReadInt32();
            break;
          }
          case 24: {
            Serial = input.ReadInt32();
            break;
          }
          case 32: {
            ErrorMsg = input.ReadBool();
            break;
          }
          case 40: {
            TypeFlag = input.ReadInt32();
            break;
          }
          case 48: {
            JoygameId = input.ReadInt64();
            break;
          }
          case 56: {
            SessionId = input.ReadInt32();
            break;
          }
          case 64: {
            ClientIp = input.ReadInt32();
            break;
          }
          case 74: {
            CustomHeader = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
